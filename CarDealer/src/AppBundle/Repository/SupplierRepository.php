<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Part;

/**
 * SupplierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SupplierRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param string $importer
     * @return array|\Exception
     * @throws \Exception
     */
    public function findSuppliersByFilter(string $importer)
    {
        if($importer!=='local' && $importer!=='importers'){
            throw  new \Exception("No such page!");
        }
        $isImporter = $importer=='local'? 0 : 1;

        $query = $this->createQueryBuilder('supplier')
            ->select('supplier','part')
            ->leftJoin('supplier.parts','part')
            ->where('supplier.isImporter = :isImporter')
            ->setParameter(':isImporter',$isImporter)
            ->getQuery();

        return $query->getResult();

//        $isImporter = $importer=='Local'? 0 : 1;
//
//        $query = $this
//            ->getEntityManager()
//            ->createQuery("Select s, p
//                               FROM AppBundle:Supplier AS s
//                               LEFT JOIN s.parts AS p
//                               WHERE s.isImporter = :isImporter")
//            ->setParameter(':isImporter',$isImporter);
//
//        return $query->getResult();
    }

    /**
     * @param string $name
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function findSupplierByName(string $name){

        return $this->createQueryBuilder('supplier')
            ->select('supplier','part')
            ->leftJoin('supplier.parts','part')
            ->where('supplier.name = :name')
            ->setParameter(':name',$name)
            ->getQuery()
            ->getSingleResult();

    }
}
